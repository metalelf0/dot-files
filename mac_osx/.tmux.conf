# # https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
# set-option -g status-bg colour235 #base02
# set-option -g status-fg colour136 #yellow
# set-option -g status-attr default
# set-option -g status-position top

# # set window split
# bind-key v split-window -h
# bind-key b split-window

# # default window title colors
# set-window-option -g window-status-fg colour244 #base0
# set-window-option -g window-status-bg default
# #set-window-option -g window-status-attr dim

# # active window title colors
# set-window-option -g window-status-current-fg colour166 #orange
# set-window-option -g window-status-current-bg default
# #set-window-option -g window-status-current-attr bright

# # pane border
# set-option -g pane-border-fg colour235 #base02
# set-option -g pane-active-border-fg colour240 #base01

# # message text
# set-option -g message-bg colour235 #base02
# set-option -g message-fg colour166 #orange

# # pane number display
# set-option -g display-panes-active-colour colour33 #blue
# set-option -g display-panes-colour colour166 #orange
# # clock
# set-window-option -g clock-mode-colour green #green


# set -g status-interval 1
# set -g status-justify centre # center align window list
# set -g status-left-length 20
# set -g status-right-length 140
# set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
# set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(cat ~/.pomo.txt.tmux) #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
# setw -g aggressive-resize on
# disable it to enable iterm2 compatibility
setw -g aggressive-resize off

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# color
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# # status bar
# set-option -g status-utf8 on

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.


# ###########################
# # Colors
# # taken from https://github.com/chrishunt/dot-files/blob/master/.tmux.conf
# ###########################

#### COLOUR (base16-solarized)

# This theme is a 256 color variant and it uses the color codes of the
# base16-solarized (256 color) terminal/shell theme:
# https://github.com/chriskempson/base16
# https://github.com/chriskempson/base16-shell

# It is based on the original tmux-colors-solarized light theme with some color
# codes changed (to map solarized base2, base00, orange, base1).

# In fact, this theme may be used in combination with any base16 256 color
# terminal/shell theme. But it will probably look a bit 'burnt' (i.e.
# solarized).  It better matches the base16-solarized-light and
# base16-solarized-dark terminal/shell color themes.

# default statusbar colors
set-option -g status-bg colour18 #base2
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour20 #base00
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour16 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour18 #base2
set-option -g pane-active-border-fg colour19 #base1

# message text
set-option -g message-bg colour18 #base2
set-option -g message-fg colour16 #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour colour16 #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=colour18,bg=red #base2, red

# ###########################
# # End Colors
# ###########################

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

# rm mouse mode fail
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\) -o #{$TMUX_VERSION_MAJOR} -gt 2' 'set -g mouse off'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# fix pane_current_path on new window and splits
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL -l"

set -g @nord_tmux_show_status_content "0"
set -g status-right "♫ #{spotify_status} #{spotify_artist}: #{spotify_track} | %a %h-%d %H:%M "

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'arcticicestudio/nord-tmux'
set -g @plugin 'robhurring/tmux-spotify'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# C-l to clear screen and history
bind -n C-l send-keys C-l \; clear-history


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
